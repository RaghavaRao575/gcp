# Define the file path
$filePath = "\\nasshare\testfolder1$\info123Ã \semi_info\data1 \testfile.txt"

# Variables to track findings
$spacePosition = $null
$specialCharPosition = $null
$fileName = Split-Path -Path $filePath -Leaf

# Loop through each character to identify spaces and special characters
foreach ($char in $filePath.ToCharArray()) {
    # Find the first space
    if ($char -eq " " -and $spacePosition -eq $null) {
        $spacePosition = $filePath.IndexOf($char)
    }
    # Find the first special character
    if ($char -match "[^a-zA-Z0-9\\:/._-]" -and $specialCharPosition -eq $null) {
        $specialCharPosition = $filePath.IndexOf($char)
    }
}

# Determine which issue occurs first
if ($spacePosition -ne $null -and ($specialCharPosition -eq $null -or $spacePosition -lt $specialCharPosition)) {
    # Space occurs first, handle space logic
    Write-Output "Space detected first in the file path."
    $problematicPath = $filePath.Substring(0, $spacePosition)
    $type = "space"
} elseif ($specialCharPosition -ne $null) {
    # Special character occurs first, handle special character logic
    Write-Output "Special character detected first in the file path."
    $problematicPath = $filePath.Substring(0, $specialCharPosition)
    $type = "special character"
} else {
    Write-Output "No spaces or special characters found in the file path."
    return
}

# Get the upper folder for the detected issue
$upperFolder = Split-Path -Path $problematicPath -Parent
Write-Output "The upper folder before the first $type is: $upperFolder"

# Enumerate files in the folder and its subfolders with filters
if (Test-Path $upperFolder) {
    Write-Output "Searching recursively in the upper folder for files and directories..."
    $matches = Get-ChildItem -Path $upperFolder -Recurse -Filter $fileName -File -ErrorAction SilentlyContinue
    if ($matches) {
        foreach ($match in $matches) {
            Write-Output "Match found: $($match.FullName)"
        }
    } else {
        Write-Output "No matching files found for '$fileName' in the upper folder or its subfolders."
    }
} else {
    Write-Output "The upper folder does not exist: $upperFolder"
}
